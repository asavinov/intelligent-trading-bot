venue: binance

api_key: "<binance-key>"
api_secret: "<binance-secret>"

telegram_bot_token: "<token>"
telegram_chat_id: "<chat-id-to-publish-messages>"

data_folder: "C:/DATA_ITB"

# === DOWNLOAD AND MERGE ===

symbol: BTCUSDT
description: "BTCUSDT 1h SVM"
freq: "1h"  # pandas frequency

data_sources:
  - folder: "BTCUSDT"
    file: "klines"
    column_prefix: ""

# === GENERATE FEATURES ===

feature_sets:
  - column_prefix: ""
    generator: talib
    feature_prefix: ""
    config:
      columns: ["close"]
      functions: ["SMA"]
      windows: [1, 3, 6, 12, 24, 168, 672]
  - column_prefix: ""
    generator: talib
    feature_prefix: ""
    config:
      columns: ["close"]
      functions: ["LINEARREG_SLOPE"]
      windows: [3, 6, 12, 24, 168, 672]
  - column_prefix: ""
    generator: talib
    feature_prefix: ""
    config:
      columns: ["close"]
      functions: ["STDDEV"]
      windows: [3, 6, 12, 24, 168, 672]

# === LABELS ===

label_sets:
  - column_prefix: ""
    generator: highlow2
    feature_prefix: ""
    config:
      columns: ["close", "high", "low"]
      function: high
      thresholds: [3.0]
      tolerance: 0.2
      horizon: 24
      names: ["high_30"]
  - column_prefix: ""
    generator: highlow2
    feature_prefix: ""
    config:
      columns: ["close", "high", "low"]
      function: low
      thresholds: [3.0]
      tolerance: 0.2
      horizon: 24
      names: ["low_30"]

# === TRAIN ===

label_horizon: 24  # Exclude last rows for correct labels
train_length: 0    # Uses this number of rows for training

train_features:
  - close_SMA_1
  - close_SMA_3
  - close_SMA_6
  - close_SMA_12
  - close_SMA_24
  - close_SMA_168
  - close_LINEARREG_SLOPE_3
  - close_LINEARREG_SLOPE_6
  - close_LINEARREG_SLOPE_12
  - close_LINEARREG_SLOPE_24
  - close_LINEARREG_SLOPE_168
  - close_STDDEV_3
  - close_STDDEV_6
  - close_STDDEV_12
  - close_STDDEV_24
  - close_STDDEV_168

labels: ["high_30", "low_30"]

train_feature_sets:
  - generator: train_features
    config: {}

algorithms:
  - name: svc
    algo: svc
    params:
      is_scale: true
      length: 26280  # 3 years
    train:
      C: 1.0

features_horizon: 850      # For online/streaming features
features_last_rows: 5      # Last rows needed

# === GENERATE SIGNALS ===

signal_sets:
  - generator: combine
    config:
      columns: ["high_30_svc", "low_30_svc"]
      names: trade_score
      combine: difference
      coefficient: 1.0
      constant: 0.0
  - generator: threshold_rule
    config:
      columns: trade_score
      names: ["buy_signal_column", "sell_signal_column"]
      parameters:
        buy_signal_threshold: 0.08
        sell_signal_threshold: -0.08

# === OUTPUTS ===

output_sets:
  - generator: score_notification_model
    config:
      score_notification: true
      score_column_names: ["trade_score"]
      notify_band_up: true
      notify_band_dn: true
      positive_bands:
        - edge: 0.08
          frequency: null
          sign: "ã€‰ã€‰ã€‰ðŸ“ˆ"
          bold: true
          text: "BUY ZONE"
        - edge: 0.04
          frequency: null
          sign: "ã€‰ã€‰"
          bold: false
          text: "strong"
        - edge: 0.02
          frequency: null
          sign: "ã€‰"
          text: "weak"
      negative_bands:
        - edge: -0.02
          frequency: null
          sign: "ã€ˆ"
          text: "weak"
        - edge: -0.04
          frequency: null
          sign: "ã€ˆã€ˆ"
          bold: false
          text: "strong"
        - edge: -0.08
          frequency: null
          sign: "ã€ˆã€ˆã€ˆðŸ“‰"
          bold: true
          text: "SELL ZONE"

  - generator: diagram_notification_model
    config:
      diagram_notification: true
      notification_freq: 1D
      score_column_names: trade_score
      score_thresholds: [-0.08, 0.08]
      resampling_freq: 1h
      nrows: 168

  - generator: trader_simulation
    config:
      buy_signal_column: buy_signal_column
      sell_signal_column: sell_signal_column

# === FINDING BEST TRADE PARAMETERS ===

simulate_model:
  data_start: 0
  data_end: null
  direction: long
  topn_to_store: 10
  signal_generator: threshold_rule
  buy_sell_equal: false
  grid:
    buy_signal_threshold: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10]
    sell_signal_threshold: [-0.01, -0.02, -0.03, -0.04, -0.05, -0.06, -0.07, -0.08, -0.09, -0.10]

# === ROLLING PREDICT CONFIG ===

rolling_predict:
  data_start: "2020-02-01 00:00:00"
  data_end: null
  prediction_start: null
  prediction_size: 10080
  prediction_steps: 4
  use_multiprocessing: false
  max_workers: 8
